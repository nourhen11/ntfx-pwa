{"version":3,"sources":["components/logo/index.js","elements/input.js","sceens/login.js","components/movie/index.js","components/movieList/index.js","components/pagination/index.js","components/navbar/index.js","sceens/home.js","sceens/favorite.js","sceens/details.js","utils/privateRoute.js","config/router.js","config/theme.js","sceens/App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["StyledLogo","styled","svg","props","paddingTop","StyledLinkLogo","a","theme","primary","Logo","viewBox","id","d","input","StyledLogin","div","secondry","StyledFormLogin","form","StyledH1Login","h1","StyledInputSubmit","login","useState","username","setUserName","password","setPassword","request_token","setReaquestToken","history","useHistory","useEffect","localStorage","getItem","push","axios","method","url","params","api_key","then","result","console","log","data","evt","preventDefault","res","setItem","catch","err","onSubmit","type","placeholder","value","onChange","e","target","StyledArticleHome","article","StyledImg","img","Movie","movie","poster_path","to","src","process","alt","title","StyledSection","section","MivieList","movies","map","StyledPaginateContainer","Pagination","previousLabel","nextLabel","breakLabel","previousClassName","nextClassName","breakClassName","pageCount","totalPages","onPageChange","containerClassName","activeClassName","pageClassName","marginPagesDisplayed","StyledLinkFavoris","StyledDiv","NavBar","icon","faHeart","StyledHomePage","StyledDiv1","StyledInputSearch","home","setMovies","searchQuery","setQuery","setTotalPages","language","results","total_pages","query","include_adult","selectedPage","selected","page","StyledFavoriteDiv","StyledButtonClear","button","Favorite","JSON","parse","favorites","setFavorites","onClick","removeItem","faBan","StyledDetail","StyledDiv2","StyledButton","details","setMovie","genres","setGenres","match","release_date","genre","name","overview","favoriteMovie","currentFavorite","findIndex","el","stringify","handleFavorite","PrivateRoute","Component","component","rest","render","Routes","exact","path","Login","Home","Details","App","Boolean","window","location","hostname","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.8c29108e.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <StyledLinkLogo>\r\n      <StyledLogo viewBox='0 0 111 30' paddingTop={12}>\r\n        <g id='netflix-logo'>\r\n          <path\r\n            d='M105.06233,14.2806261 L110.999156,30 C109.249227,29.7497422 107.500234,29.4366857 105.718437,29.1554972 L102.374168,20.4686475 L98.9371075,28.4375293 C97.2499766,28.1563408 95.5928391,28.061674 93.9057081,27.8432843 L99.9372012,14.0931671 L94.4680851,-5.68434189e-14 L99.5313525,-5.68434189e-14 L102.593495,7.87421502 L105.874965,-5.68434189e-14 L110.999156,-5.68434189e-14 L105.06233,14.2806261 Z M90.4686475,-5.68434189e-14 L85.8749649,-5.68434189e-14 L85.8749649,27.2499766 C87.3746368,27.3437061 88.9371075,27.4055675 90.4686475,27.5930265 L90.4686475,-5.68434189e-14 Z M81.9055207,26.93692 C77.7186241,26.6557316 73.5307901,26.4064111 69.250164,26.3117443 L69.250164,-5.68434189e-14 L73.9366389,-5.68434189e-14 L73.9366389,21.8745899 C76.6248008,21.9373887 79.3120255,22.1557784 81.9055207,22.2804387 L81.9055207,26.93692 Z M64.2496954,10.6561065 L64.2496954,15.3435186 L57.8442216,15.3435186 L57.8442216,25.9996251 L53.2186709,25.9996251 L53.2186709,-5.68434189e-14 L66.3436123,-5.68434189e-14 L66.3436123,4.68741213 L57.8442216,4.68741213 L57.8442216,10.6561065 L64.2496954,10.6561065 Z M45.3435186,4.68741213 L45.3435186,26.2498828 C43.7810479,26.2498828 42.1876465,26.2498828 40.6561065,26.3117443 L40.6561065,4.68741213 L35.8121661,4.68741213 L35.8121661,-5.68434189e-14 L50.2183897,-5.68434189e-14 L50.2183897,4.68741213 L45.3435186,4.68741213 Z M30.749836,15.5928391 C28.687787,15.5928391 26.2498828,15.5928391 24.4999531,15.6875059 L24.4999531,22.6562939 C27.2499766,22.4678976 30,22.2495079 32.7809542,22.1557784 L32.7809542,26.6557316 L19.812541,27.6876933 L19.812541,-5.68434189e-14 L32.7809542,-5.68434189e-14 L32.7809542,4.68741213 L24.4999531,4.68741213 L24.4999531,10.9991564 C26.3126816,10.9991564 29.0936358,10.9054269 30.749836,10.9054269 L30.749836,15.5928391 Z M4.78114163,12.9684132 L4.78114163,29.3429562 C3.09401069,29.5313525 1.59340144,29.7497422 0,30 L0,-5.68434189e-14 L4.4690224,-5.68434189e-14 L10.562377,17.0315868 L10.562377,-5.68434189e-14 L15.2497891,-5.68434189e-14 L15.2497891,28.061674 C13.5935889,28.3437998 11.906458,28.4375293 10.1246602,28.6868498 L4.78114163,12.9684132 Z'\r\n            id='Fill-14'\r\n          ></path>\r\n        </g>\r\n      </StyledLogo>\r\n    </StyledLinkLogo>\r\n  )\r\n}\r\n\r\nconst StyledLogo = styled.svg`\r\n  height: 20px;\r\n  width: 75px;\r\n  padding-top: ${props => `${props.paddingTop}px`};\r\n`\r\nconst StyledLinkLogo = styled.a`\r\n  text-decoration: none;\r\n  vertical-align: middle;\r\n  fill: ${props => props.theme.primary};\r\n\r\n  display: inline-block;\r\n  margin-left: 3px;\r\n`\r\nexport default Logo\r\n","import styled from 'styled-components'\r\n\r\nexport default styled.input`\r\n  width: -webkit-fill-available;\r\n  border-radius: 4px;\r\n  border: 0;\r\n  color: #fff;\r\n  height: 40px;\r\n  line-height: 50px;\r\n  padding: 16px 20px 0;\r\n  margin-bottom: 20px;\r\n  background-color: #80808091;\r\n`\r\n","/* eslint-disable react/no-unescaped-entities */\r\nimport React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport Logo from '../components/logo'\r\nimport styled from 'styled-components'\r\nimport StyledInputSearch from '../elements/input'\r\nimport { useHistory } from 'react-router-dom'\r\nconst login = () => {\r\n  const [username, setUserName] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [request_token, setReaquestToken] = useState('')\r\n  const history = useHistory()\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token')\r\n    if (token) {\r\n      history.push('/home')\r\n    } else {\r\n      axios({\r\n        method: 'GET',\r\n        url: 'https://api.themoviedb.org/3/authentication/token/new',\r\n        params: {\r\n          api_key: '19b92b380bd8f15628b25e5891e2bb18'\r\n        }\r\n      }).then(result => {\r\n        console.log(result)\r\n        setReaquestToken(result.data.request_token)\r\n      })\r\n    }\r\n  }, [])\r\n  const login = evt => {\r\n    evt.preventDefault()\r\n    axios({\r\n      method: 'POST',\r\n      url:\r\n        'https://api.themoviedb.org/3/authentication/token/validate_with_login',\r\n      params: {\r\n        api_key: '19b92b380bd8f15628b25e5891e2bb18'\r\n      },\r\n      data: {\r\n        username,\r\n        password,\r\n        request_token\r\n      }\r\n    })\r\n      .then(res => {\r\n        localStorage.setItem('token', res.data.request_token)\r\n        history.push('/home')\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n  return (\r\n    <StyledLogin>\r\n      <Logo></Logo>\r\n      <StyledH1Login>S'identifier</StyledH1Login>\r\n      <StyledFormLogin onSubmit={login}>\r\n        <StyledInputSearch\r\n          type='text'\r\n          placeholder='E-mail ou numéro de téléphone'\r\n          value={username}\r\n          onChange={e => setUserName(e.target.value)}\r\n        />\r\n        <br />\r\n        <StyledInputSearch\r\n          type='password'\r\n          placeholder='Mot de passe'\r\n          value={password}\r\n          onChange={e => setPassword(e.target.value)}\r\n        />\r\n        <br />\r\n        <StyledInputSubmit type='submit' value='S identifier' />\r\n      </StyledFormLogin>\r\n    </StyledLogin>\r\n  )\r\n}\r\n\r\nconst StyledLogin = styled.div`\r\n  background-color: ${props => props.theme.secondry};\r\n  min-height: 657px;\r\n  color: white;\r\n`\r\nconst StyledFormLogin = styled.form`\r\n  margin: 18px;\r\n`\r\n\r\nconst StyledH1Login = styled.h1`\r\n  padding-left: 17px;\r\n`\r\nconst StyledInputSubmit = styled.input`\r\n  margin-top: 30px;\r\n  width: -webkit-fill-available;\r\n  background-color: transparent;\r\n  border-color: #bdbdbd;\r\n  border-width: 1px;\r\n  color: white;\r\n  height: 56px;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  margin: 24px 0 12px;\r\n`\r\nexport default login\r\n","/* eslint-disable react/prop-types */\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nconst Movie = props => {\r\n  return (\r\n    <StyledArticleHome>\r\n      <div>\r\n        {props.movie.poster_path ? (\r\n          <Link to={`/movie/${props.movie.id}`}>\r\n            <StyledImg\r\n              src={`${process.env.REACT_APP_URL_IMG}${props.movie.poster_path}`}\r\n              key={props.movie.id}\r\n              alt={props.movie.title}\r\n            />\r\n          </Link>\r\n        ) : (\r\n          <StyledImg src='https://thumbs.dreamstime.com/b/no-image-available-icon-photo-camera-flat-vector-illustration-132483097.jpg' />\r\n        )}\r\n      </div>\r\n    </StyledArticleHome>\r\n  )\r\n}\r\n\r\nconst StyledArticleHome = styled.article`\r\n  width: 160px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 15px;\r\n`\r\n\r\nconst StyledImg = styled.img`\r\n  width: 150px;\r\n  height: 161px;\r\n`\r\nexport default Movie\r\n","/* eslint-disable react/prop-types */\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport MovieComponent from '../movie'\r\n\r\nconst MivieList = props => {\r\n  return (\r\n    <StyledSection>\r\n      {props.movies.map(movie => (\r\n        <MovieComponent movie={movie} key={movie.id} />\r\n      ))}\r\n    </StyledSection>\r\n  )\r\n}\r\n\r\nconst StyledSection = styled.section`\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  text-align: center;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n`\r\n\r\nexport default MivieList\r\n","/* eslint-disable react/prop-types */\r\nimport React from 'react'\r\nimport ReactPaginate from 'react-paginate'\r\nimport styled from 'styled-components'\r\nconst Pagination = props => {\r\n  return (\r\n    <StyledPaginateContainer>\r\n      <ReactPaginate\r\n        previousLabel={'<<'}\r\n        nextLabel={'>>'}\r\n        breakLabel='...'\r\n        previousClassName='itempage'\r\n        nextClassName='item'\r\n        breakClassName='item'\r\n        pageCount={props.totalPages}\r\n        onPageChange={props.method}\r\n        containerClassName='pagination'\r\n        activeClassName='active'\r\n        pageClassName='item'\r\n        marginPagesDisplayed='2'\r\n      />\r\n    </StyledPaginateContainer>\r\n  )\r\n}\r\n\r\nconst StyledPaginateContainer = styled.div`\r\n  .pagination {\r\n    color: red;\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n  .break-me {\r\n    cursor: default;\r\n  }\r\n  .active {\r\n    border-color: transparent;\r\n    background-color: white;\r\n    color: red;\r\n  }\r\n  .item {\r\n    margin-left: 15px;\r\n    list-style: none;\r\n    cursor: pointer;\r\n  }\r\n  .itempage {\r\n    list-style: none;\r\n    cursor: pointer;\r\n  }\r\n`\r\nexport default Pagination\r\n","import React from 'react'\r\nimport Logo from '../../components/logo'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHeart } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <>\r\n      <StyledDiv>\r\n        <Link to='/home'>\r\n          <Logo></Logo>\r\n        </Link>\r\n        <StyledLinkFavoris>\r\n          <Link to='favorite'>\r\n            <FontAwesomeIcon icon={faHeart} />\r\n          </Link>\r\n        </StyledLinkFavoris>\r\n      </StyledDiv>\r\n    </>\r\n  )\r\n}\r\nconst StyledLinkFavoris = styled.div`\r\n  a {\r\n    color: red;\r\n  }\r\n  float: right;\r\n  margin-top: 3px;\r\n`\r\nconst StyledDiv = styled.div`\r\n  color: white;\r\n  background-color: black;\r\n  padding: 14px;\r\n`\r\nexport default NavBar\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport styled from 'styled-components'\r\nimport MovieListComponent from '../components/movieList'\r\nimport PaginationComponent from '../components/pagination'\r\nimport Navbar from '../components/navbar'\r\nconst home = () => {\r\n  const [movies, setMovies] = useState([])\r\n  const [searchQuery, setQuery] = useState('')\r\n  const [totalPages, setTotalPages] = useState(0)\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: 'GET',\r\n      url: `${process.env.REACT_APP_URL}movie/now_playing`,\r\n      params: {\r\n        api_key: process.env.REACT_APP_API_KEY,\r\n        language: 'en-US'\r\n      }\r\n    }).then(result => {\r\n      setMovies(result.data.results)\r\n      setTotalPages(result.data.total_pages)\r\n    })\r\n  }, [])\r\n\r\n  const onChange = e => {\r\n    e.preventDefault()\r\n    setQuery(e.target.value)\r\n    axios({\r\n      method: 'GET',\r\n      url: `${process.env.REACT_APP_URL}search/movie`,\r\n      params: {\r\n        api_key: process.env.REACT_APP_API_KEY,\r\n        query: searchQuery,\r\n        language: 'en-US',\r\n        include_adult: false\r\n      }\r\n    })\r\n      .then(result => {\r\n        setMovies(result.data.results)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n  const handlePageClick = ({ selected: selectedPage }) => {\r\n    console.log(selectedPage)\r\n    axios({\r\n      method: 'GET',\r\n      url: `${process.env.REACT_APP_URL}movie/now_playing`,\r\n      params: {\r\n        api_key: process.env.REACT_APP_API_KEY,\r\n        language: 'en-US',\r\n        page: selectedPage + 1\r\n      }\r\n    }).then(result => {\r\n      setMovies(result.data.results)\r\n    })\r\n  }\r\n  return (\r\n    <StyledHomePage>\r\n      <Navbar />\r\n      <StyledDiv1>\r\n        <StyledInputSearch\r\n          type='text'\r\n          placeholder='Rechercher un film, une série, un artiste......'\r\n          value={searchQuery}\r\n          onChange={onChange}\r\n        />\r\n      </StyledDiv1>\r\n      <MovieListComponent movies={movies} />\r\n      <PaginationComponent totalPages={totalPages} method={handlePageClick} />\r\n    </StyledHomePage>\r\n  )\r\n}\r\nconst StyledHomePage = styled.div`\r\n  background-color: ${props => props.theme.secondry};\r\n  padding: 10px;\r\n  color: white;\r\n`\r\nconst StyledDiv1 = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\nconst StyledInputSearch = styled.input`\r\n  width: -webkit-fill-available;\r\n  border-radius: 4px;\r\n  border: 0;\r\n  height: 40px;\r\n  background-color: #61616196;\r\n  color: gray;\r\n  margin-top: 10px;\r\n  text-align: center;\r\n`\r\n\r\nexport default home\r\n","import React, { useState } from 'react'\r\nimport MovieListComponent from '../components/movieList'\r\nimport styled from 'styled-components'\r\nimport Navbar from '../components/navbar'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBan } from '@fortawesome/free-solid-svg-icons'\r\nconst Favorite = () => {\r\n  const [favorites, setFavorites] = useState(\r\n    JSON.parse(localStorage.getItem('favorite')) || []\r\n  )\r\n  const clearFavorite = () => {\r\n    localStorage.removeItem('favorite')\r\n    setFavorites([])\r\n  }\r\n  return (\r\n    <StyledFavoriteDiv>\r\n      <Navbar />\r\n      {favorites ? (\r\n        <MovieListComponent movies={favorites} />\r\n      ) : (\r\n        <p>no favorite list</p>\r\n      )}\r\n      <StyledButtonClear onClick={clearFavorite}>\r\n        <FontAwesomeIcon icon={faBan} />\r\n      </StyledButtonClear>\r\n    </StyledFavoriteDiv>\r\n  )\r\n}\r\n\r\nconst StyledFavoriteDiv = styled.div`\r\n  background-color: black;\r\n  color: white;\r\n  min-height: 759px;\r\n`\r\nconst StyledButtonClear = styled.button`\r\n  color: red;\r\n  margin-left: 37px;\r\n  margin-top:10px;\r\n  background-color: transparent;\r\n}\r\n`\r\nexport default Favorite\r\n","/* eslint-disable no-undef */\r\nimport React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport styled from 'styled-components'\r\n\r\nimport Navbar from '../components/navbar'\r\n\r\nconst details = props => {\r\n  const [movie, setMovie] = useState({})\r\n  const [genres, setGenres] = useState([])\r\n  useEffect(() => {\r\n    axios({\r\n      method: 'GET',\r\n      url: `https://api.themoviedb.org/3/movie/${props.match.params.id}`,\r\n      params: {\r\n        api_key: '19b92b380bd8f15628b25e5891e2bb18',\r\n        language: 'en-US'\r\n      }\r\n    }).then(result => {\r\n      setMovie(result.data)\r\n      setGenres(result.data.genres)\r\n    })\r\n  }, [])\r\n  const handleFavorite = favoriteMovie => {\r\n    const currentFavorite = JSON.parse(localStorage.getItem('favorite')) || []\r\n    console.log(currentFavorite)\r\n    const indexOfExistingMovie = currentFavorite.findIndex(\r\n      el => el.id === favoriteMovie.id\r\n    )\r\n    if (indexOfExistingMovie == -1) {\r\n      currentFavorite.push(favoriteMovie)\r\n    }\r\n    localStorage.setItem('favorite', JSON.stringify(currentFavorite))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {' '}\r\n      <Navbar />\r\n      <StyledDetail>\r\n        <div>\r\n          <StyledImg\r\n            src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\r\n          />\r\n        </div>\r\n        <StyledDiv2>\r\n          <h2>{movie.title}</h2>\r\n          <p>{movie.release_date}</p>\r\n          {genres.map(genre => (\r\n            <span key={genre.id}>* {genre.name}</span>\r\n          ))}\r\n          <p>{movie.overview}</p>\r\n          <StyledButton\r\n            onClick={() =>\r\n              handleFavorite({\r\n                id: movie.id,\r\n                title: movie.title,\r\n                poster_path: movie.poster_path\r\n              })\r\n            }\r\n          >\r\n            Ajouter aux Favoris\r\n          </StyledButton>\r\n        </StyledDiv2>\r\n      </StyledDetail>\r\n    </div>\r\n  )\r\n}\r\nconst StyledDetail = styled.div`\r\n  background-color: ${props => props.theme.secondry};\r\n  color: white;\r\n  display: flex;\r\n  flex-direction: row;\r\n  min-height: 759px;\r\n`\r\nconst StyledImg = styled.img`\r\n  width: 153px;\r\n  margin-top: 27px;\r\n`\r\nconst StyledDiv2 = styled.div`\r\n  padding-left: 20px;\r\n`\r\nconst StyledButton = styled.button`\r\n  background-color: transparent;\r\n  color: ${props => props.theme.primary};\r\n  width: 155px;\r\n  cursor: pointer;\r\n  height: 36px;\r\n`\r\n\r\nexport default details\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n// eslint-disable-next-line react/prop-types\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        localStorage.getItem('token') ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to='/'></Redirect>\r\n        )\r\n      }\r\n    ></Route>\r\n  )\r\n}\r\n\r\nexport default PrivateRoute\r\n","import React from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect,\r\n  Route\r\n} from 'react-router-dom'\r\nimport Login from '../sceens/login'\r\nimport Home from '../sceens/home'\r\nimport Favorite from '../sceens/favorite'\r\nimport Details from '../sceens/details'\r\nimport PrivateRoute from '../utils/privateRoute'\r\nconst Routes = () => {\r\n  return (\r\n    <Router>\r\n      <Route exact path='/' component={Login} />\r\n      <Switch>\r\n        <PrivateRoute path='/home' component={Home} />\r\n        <PrivateRoute path='/favorite' component={Favorite} />\r\n        <Route path='/movie/:id' component={Details} />\r\n        <Redirect to='/'></Redirect>\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default Routes\r\n","const theme = {\r\n  primary: 'red',\r\n  secondry: 'black'\r\n}\r\nexport { theme }\r\n","import React from 'react'\nimport { ThemeProvider } from 'styled-components'\nimport Route from '../config/router'\nimport { theme } from '../config/theme'\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Route></Route>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './sceens/App'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}